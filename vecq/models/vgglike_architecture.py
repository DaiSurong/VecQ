# Architecture reconstruction
import keras
import sys
sys.path.append('../')
from ..quantize_layers import Conv2D_Q, Dense_Q, DepthwiseConv2D_Q
def VGG_like(kq=None,
		bq=None,
		aq=None,
		activation=None,
		after_activation=None):
	inputs=keras.layers.Input(shape=(32,32,3))
	x=Conv2D_Q(name='conv2d_3',
		trainable=True,
		batch_input_shape=(None, 32, 32, 3),
		dtype='float32',
		filters=64,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(inputs)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_4',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=Conv2D_Q(name='conv2d_4',
		trainable=True,
		filters=64,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_5',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=keras.layers.pooling.MaxPooling2D(name='max_pooling2d_3',
		trainable=True,
		pool_size=(2, 2),
		padding='valid',
		strides=(2, 2),
		data_format='channels_last')(x)
	x=keras.layers.core.Dropout(name='dropout_1',
		trainable=True,
		rate=0.0,
		noise_shape=None,
		seed=None)(x)
	x=Conv2D_Q(name='conv2d_5',
		trainable=True,
		filters=128,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_6',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=Conv2D_Q(name='conv2d_6',
		trainable=True,
		filters=128,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_7',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=keras.layers.pooling.MaxPooling2D(name='max_pooling2d_4',
		trainable=True,
		pool_size=(2, 2),
		padding='valid',
		strides=(2, 2),
		data_format='channels_last')(x)
	x=keras.layers.core.Dropout(name='dropout_2',
		trainable=True,
		rate=0.0,
		noise_shape=None,
		seed=None)(x)
	x=Conv2D_Q(name='conv2d_7',
		trainable=True,
		filters=256,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_8',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=Conv2D_Q(name='conv2d_8',
		trainable=True,
		filters=256,
		kernel_size=(3, 3),
		strides=(1, 1),
		padding='same',
		data_format='channels_last',
		dilation_rate=(1, 1),
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_9',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=keras.layers.pooling.MaxPooling2D(name='max_pooling2d_5',
		trainable=True,
		pool_size=(2, 2),
		padding='valid',
		strides=(2, 2),
		data_format='channels_last')(x)
	x=keras.layers.core.Dropout(name='dropout_3',
		trainable=True,
		rate=0.0,
		noise_shape=None,
		seed=None)(x)
	x=keras.layers.core.Flatten(name='flatten_2',
		trainable=True,
		data_format='channels_last')(x)
	x=Dense_Q(name='dense_3',
		trainable=True,
		units=1024,
		activation=activation,
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq,
		aq=aq,
		after_activation=after_activation)(x)
	x=keras.layers.normalization.BatchNormalization(name='batch_normalization_10',
		trainable=True,
		axis=-1,
		momentum=0.99,
		epsilon=0.001,
		center=True,
		scale=True,
		beta_initializer={'class_name': 'Zeros', 'config': {}},
		gamma_initializer={'class_name': 'Ones', 'config': {}},
		moving_mean_initializer={'class_name': 'Zeros', 'config': {}},
		moving_variance_initializer={'class_name': 'Ones', 'config': {}},
		beta_regularizer=None,
		gamma_regularizer=None,
		beta_constraint=None,
		gamma_constraint=None)(x)
	x=keras.layers.core.Dropout(name='dropout_4',
		trainable=True,
		rate=0.5,
		noise_shape=None,
		seed=None)(x)
	outputs=Dense_Q(name='dense_4',
		trainable=True,
		units=10,
		activation="softmax",
		use_bias=True,
		kernel_regularizer=None,
		bias_regularizer=None,
		activity_regularizer=None,
		kernel_constraint=None,
		bias_constraint=None,
		kq=kq,
		bq=bq)(x)
	model=keras.models.Model(inputs,outputs)
	return model
